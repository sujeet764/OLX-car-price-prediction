import pandas as pd
import numpy
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
import numpy as np
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

olx = pd.read_csv("F:/datasets/OLX_Car_Data_CSV.csv")

olx.drop(['Registered City'],axis=1,inplace=True)
olx.rename(columns={'Transaction Type':'Transaction_Type','KMs Driven':'KMs_Driven'},inplace=True)

#Displaying the relationship between target and all responsed variable

for feature in olx.iloc[:,[1,2,6]]:
    data=olx.copy()
    
    data.groupby(feature)['Price'].median().plot.bar()
    plt.title(feature)
    plt.ylabel('Price')
    plt.xlabel(feature)
    plt.show()
    
#Performing log transformation on some important feature

for feature in olx.iloc[:,[3,5]]:
    olx[feature] =np.log(olx[feature])
    
olx.dropna(inplace=True)

#While working with this dataset i faced lot's of different different kind of problem and one of the main issue was that it has so much randomness was available in the dataset
#SO to build the model and make it worked properly i had to subset all the brand feature and for one particular brand it will create a model.

olx_suzuki = olx[olx.Brand=='Suzuki']

olx_suzuki.Condition        = le.fit_transform(olx_suzuki.Condition)
olx_suzuki.Model            = le.fit_transform(olx_suzuki.Model)
olx_suzuki.Transaction_Type = le.fit_transform(olx_suzuki.Transaction_Type)
olx_suzuki.Fuel             = le.fit_transform(olx_suzuki.Fuel)

olx_suzuki_x = olx_suzuki.iloc[:,[1,2,3,4,6,7]]
olx_suzuki_y = olx_suzuki.iloc[:,5]

from sklearn.model_selection import train_test_split
olx_x_train,olx_x_test,olx_y_train,olx_y_test = train_test_split(olx_suzuki_x,olx_suzuki_y,test_size=0.2,random_state=101)

from sklearn.linear_model import LinearRegression
olx_suzuki_model = LinearRegression()

olx_suzuki_model.fit(olx_x_train,olx_y_train)

olx_suzuki_pred = olx_suzuki_model.predict(olx_x_test)

pd.DataFrame({"Actual":np.exp(olx_y_test),"Predicted":np.exp(olx_suzuki_pred)})


